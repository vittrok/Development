// matches/netlify-prod/functions/_util/canon.js
// –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–æ–º–∞–Ω–¥ —ñ –ø–æ–±—É–¥–æ–≤–∏ pair_key –∑–≥—ñ–¥–Ω–æ v1.1 –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏.

const fs = require('fs');
const path = require('path');

let _aliasMapCache = null;

// –ü—Ä–∏–±—Ä–∞—Ç–∏ –¥—ñ–∞–∫—Ä–∏—Ç–∏–∫–∏: Bar√ßa -> Barca; M√ºnchen -> Munchen
function stripDiacritics(s) {
  return String(s || '').normalize('NFD').replace(/[\u0300-\u036f]/g, '');
}

// –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–ª—è –∫–ª—é—á—ñ–≤ alias_map: lower, trim, –¥—ñ–∞–∫—Ä–∏—Ç–∏–∫–∏, –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—è ‚Üí –ø—Ä–æ–±—ñ–ª–∏, –º—É–ª—å—Ç–∏–ø—Ä–æ–±—ñ–ª–∏ ‚Üí –æ–¥–∏–Ω
function normalizeForAliasKey(team) {
  if (!team) return '';
  const lowered = stripDiacritics(String(team).toLowerCase());
  const lettersSpaces = lowered.replace(/[^a-z0-9\s]/g, ' ');
  const singleSpaced = lettersSpaces.replace(/\s+/g, ' ').trim();
  return singleSpaced;
}

function loadAliasMap() {
  if (_aliasMapCache) return _aliasMapCache;
  const aliasPath = path.join(process.cwd(), 'data', 'alias_map.json');
  const raw = fs.readFileSync(aliasPath, 'utf8');
  const originalObj = JSON.parse(raw);

  // üîß –í–ê–ñ–õ–ò–í–û: –±—É–¥—É—î–º–æ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω—É –º–∞–ø—É –∫–ª—é—á—ñ–≤, —â–æ–± "u-21" == "u 21" == "U21"
  const normalized = {};
  for (const [k, v] of Object.entries(originalObj)) {
    const nk = normalizeForAliasKey(k);
    normalized[nk] = String(v).trim();
  }

  _aliasMapCache = normalized;
  return _aliasMapCache;
}

// –ö–∞–Ω–æ–Ω—ñ—á–Ω–∞ –Ω–∞–∑–≤–∞ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º alias_map; —è–∫—â–æ –≤—ñ–¥—Å—É—Ç–Ω—è ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª —è–∫ —î
function canonicalizeTeam(team) {
  const alias = loadAliasMap();
  const key = normalizeForAliasKey(team);
  const mapped = alias[key];
  return mapped || String(team).trim();
}

// –ü–æ–±—É–¥–æ–≤–∞ order-independent –∫–ª—é—á–∞ –ø–∞—Ä–∏
function buildPairKey(homeCanon, awayCanon) {
  return [homeCanon, awayCanon].sort((a, b) => a.localeCompare(b, 'en')).join('|');
}

// –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞ —É—Ç–∏–ª—ñ—Ç–∞ –¥–ª—è –º–∞—Ç—á—É
function canonicalizePair(homeTeam, awayTeam) {
  const homeCanon = canonicalizeTeam(homeTeam);
  const awayCanon = canonicalizeTeam(awayTeam);
  const pairKey = buildPairKey(homeCanon, awayCanon);
  return { homeCanon, awayCanon, pairKey };
}

module.exports = {
  stripDiacritics,
  normalizeForAliasKey,
  canonicalizeTeam,
  buildPairKey,
  canonicalizePair
};
