// matches/netlify-prod/functions/_util/confidence.js
// –û–±—á–∏—Å–ª–µ–Ω–Ω—è home_away_confidence –∑–≥—ñ–¥–Ω–æ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏ v1.1:
// –ü–æ–≤–µ—Ä—Ç–∞—î –æ–¥–Ω–µ –∑: "high" | "medium" | "low"

const { canonicalizeTeam, normalizeForAliasKey } = require('./canon');

// –î–æ–ø–æ–º—ñ–∂–Ω—ñ regex-–∏ –¥–ª—è –¥–∂–µ—Ä–µ–ª—å–Ω–∏—Ö –º—ñ—Ç–æ–∫
const HOME_HINT = /\b(home|host|h)\b/i;
const AWAY_HINT = /\b(away|visitor|a)\b/i;

// –ö–æ–∂–Ω–µ –ø—Ä–∞–≤–∏–ª–æ –¥–æ–¥–∞—î –±–∞–ª–∏ –¥–æ score. –ì—Ä–∞–¥–∞—Ü—ñ—è: score >= 80 -> high, >= 45 -> medium, —ñ–Ω–∞–∫—à–µ low.
function evaluateConfidenceRow(row) {
  const reasons = [];
  let score = 0;

  const tournament = String(row.tournament || '');
  const link = String(row.link || '');
  const meta = row.meta || {}; // –æ–ø—Ü—ñ–π–Ω–æ: flags, rawHomeLabel, rawAwayLabel

  // 1) –Ø–≤–Ω—ñ —Ç–µ–≥–∏ –≤—ñ–¥ –ø–∞—Ä—Å–µ—Ä–∞ (–Ω–∞–π—Å–∏–ª—å–Ω—ñ—à–µ)
  if (meta.flags && (meta.flags.homeTagged || meta.flags.awayTagged)) {
    score += 60;
    reasons.push('parser_tags');
  }

  // 2) –í—ñ–¥–æ–º—ñ —Å–∏–ª—å–Ω—ñ –æ—Ñ—ñ—Ü—ñ–π–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ —É link (–¥–æ–º–µ–Ω)
  if (/\b(uefa|fifa|premierleague|laliga|bundesliga|seriea|ligue1|ekstraklasa|facup|dfb)\b/i.test(link)) {
    score += 30;
    reasons.push('official_competition_site');
  }

  // 3) –¢—É—Ä–Ω—ñ—Ä –∑ —á—ñ—Ç–∫–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é (–¥–æ–º/–≤–∏—ó–∑–¥)
  if (/\b(uefa|champions league|europa league|conference league|euro qualifiers|world cup qualifiers|qualifiers|premier league|la liga|bundesliga|serie a|ligue 1|ekstraklasa|fa cup|dfb-pokal)\b/i.test(tournament)) {
    score += 20;
    reasons.push('structured_competition');
  }

  // 4) –õ—ñ–Ω–≥–≤—ñ—Å—Ç–∏—á–Ω—ñ –ø—ñ–¥–∫–∞–∑–∫–∏
  if (meta.rawHomeLabel && HOME_HINT.test(meta.rawHomeLabel)) {
    score += 20;
    reasons.push('home_label_hint');
  }
  if (meta.rawAwayLabel && AWAY_HINT.test(meta.rawAwayLabel)) {
    score += 20;
    reasons.push('away_label_hint');
  }

  // 5) –°–∞–º–æ–∑–≥–æ–¥–∂–µ–Ω—ñ—Å—Ç—å alias-–∫–∞–Ω–æ–Ω—ñ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó
  const homeCanon = canonicalizeTeam(row.home_team);
  const awayCanon = canonicalizeTeam(row.away_team);
  const homeKey = normalizeForAliasKey(homeCanon);
  const awayKey = normalizeForAliasKey(awayCanon);
  if (homeKey && awayKey && homeKey !== awayKey) {
    score += 5;
    reasons.push('sane_distinct_teams');
  }

  // –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ score –≤ [0..100]
  if (score > 100) score = 100;
  if (score < 0) score = 0;

  // üîß –ü–æ—Ä–æ–≥–∏: medium –∑ 50 ‚Üí 45, —â–æ–± "Only linguistic hints" —ñ–∑ 45 –±–∞–ª–∞–º–∏ –±—É–≤ medium
  const level = score >= 80 ? 'high' : score >= 45 ? 'medium' : 'low';
  return { level, score, reasons };
}

/**
 * –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.
 * –û—á—ñ–∫—É—î –æ–±'—î–∫—Ç –∑ –ø–æ–ª—è–º–∏:
 * {
 *   home_team, away_team, tournament?, link?, source?, meta?: { flags?, rawHomeLabel?, rawAwayLabel? }
 * }
 */
function computeHomeAwayConfidence(row) {
  return evaluateConfidenceRow(row);
}

module.exports = {
  computeHomeAwayConfidence
};
